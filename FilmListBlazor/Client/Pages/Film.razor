@page "/film"
@page "/film/{id:int}"
@inject IFilmListService FilmListService


@if (Id == null)
{
    <PageTitle>Criar Novo Título</PageTitle>
    <h3>Criar Novo Título</h3>
}
else
{
    <PageTitle>Editar @film.Title</PageTitle>
    <h3>Editar @film.Title</h3>
}

<EditForm Model="film" OnSubmit="HandleSubmit"> 
    <div>
        <label for="title">Título</label>
        <InputText id="title" @bind-Value="film.Title" class="form-control"></InputText>
    </div>
    <div>
        <label for="gender">Gênero</label>
        <InputText id="gender" @bind-Value="film.Gender" class="form-control"></InputText>
    </div>
    <div>
        <label for="type">Tipo</label>
        <InputText id="type" @bind-Value="film.Type" class="form-control"></InputText>
    </div>
    <div>
        <label for="durationtime">Tempo de Duração</label>
        <InputText id="durationtime" @bind-Value="film.DurationTime" class="form-control"></InputText>
    </div>
    <div>
        <label for="happinessscale">Escala de Felicidade</label>
        <InputText id="happinessscale" @bind-Value="film.HappinessScale" class="form-control"></InputText>
    </div>
    <div>
        <label>Assistido</label><br />
        <InputSelect @bind-Value="film.WatchId" class="form-select">
            @foreach (var watch in FilmListService.Watches)
            {
                <option value="@watch.Id">@watch.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-outline-success btn-sm">@btnText</button>
    <button type="button" class="btn btn-outline-danger btn-sm" @onclick="DeleteFilm">Deletar Título</button>
</EditForm>

@code {

    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    FilmList film = new FilmList { Watch = new Watch() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Salvar Título" : "Atualizar Título";
        await FilmListService.GetWatches();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            film.Watch = FilmListService.Watches[0];
            film.WatchId = film.Watch.Id;
        }
        else
        {
            film = await FilmListService.GetSingleFilm((int)Id);
        }
    }

    async void HandleSubmit()
    {
        if (Id == null)
        {
            await FilmListService.CreateFilm(film);
        }
        else
        {
            await FilmListService.UpdateFilm(film);
        }

    }
    async Task DeleteFilm()
    {
        await FilmListService.DeleteFilm(film.Id);
    }
}
